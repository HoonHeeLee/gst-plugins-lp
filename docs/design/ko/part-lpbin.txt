lpbin
-----

URI 기반의 컨텐츠를 재생하기 위한 파이프라인으로 playbin의
컨셉을 이용하되, 소프트웨어 디코더를 사용하지 못하는 환경에
좀더 유연한 아키텍쳐를 제공하기 위해 개발되었습니다.

요구 사항:

 - playbin과 호환성
 - Hardware Decoder/Renderer Element 지원

Components
----------

* uridecodebin
 - 주어진 URL에대한 적절한 source를 선택
 - decodebin2를 연결하여 autoplugging 기능을 수행
 - audio/video/text stream을 출력

* fcbin
 - 주어진 조건에 따라 input-selector/funnel을 적절히 배치
 - PAUSED 상태에서도 stream 제어가 가능

* lpsink
 - fcbin에서 결정된 stream에 따라 적절한 sink 엘리먼트를 등록
 - stream id demux를 통한 de-funnel 기능 수행

playbin과 다른점
---------------

 - 등록할 combiner(input-selector/funnel)의 선택 로직을 fcbin으로 위임
 - PREROLLING 이전에 데이터 흐름에 대한 제어 가능
 - 제한적인 형태의 sink 지원 기능
 - funnel 에 대한 호환성 제공

Multi Streams
-------------
여러 트랙을 가진 스트림을 동시에 별도의 sink element에 공급하고자할 때
사용하는 기능으로 다음과 같은 경우 있습니다.

 - 3D dual stream
 - multiple output

이때 combiner를 input-selector로 제한하게 되면 하나의 stream만 공급이
가능하여 요구사항을 충족할 수 없게 됩니다. fcbin에서는 sinkpad의 caps
정보 중 multiple-stream 속성을 확인하여 해당 값이 true인경우 funnel을
combiner로 선택하는 기능을 제공합니다. funnel은 입력 stream을 하나의
srcpad로 출력하는 기능을 하기 때문에 pipeline handling을 좀더 간결하게
만들수 있습니다.

Stream Block
------------
일반적인 READY to PAUSED 상태에서는 pipeline이 구성되고, 모든 데이터와
이벤트가 전달 가능한 상태로 변경되는 것을 의미합니다. 그러나 데이터의
흐름 도중에 상위 레이어의 판단에 따라 해당 pipeline의 유효성을 검사할
필요가 있습니다. 특히 하드웨어 자원을 점유하게되는 sink element를 구현한
경우라면 sink element의 구동 이전에 자원 점유 가능 여부를 판단하여 상태
변경 프로세스를 지속할지, 혹은 중단할지를 결정해야하는데, 이때 상위
레이어에서 좀더 적극적인 개입이 가능하도록 stream block 기능을 제공합니다.

lpsink
------
playbin의 playsink에서는 다양한 sink chain을 구성할 수 있는 부분에 촛점이
맞춰져 있다면, lpsink는 구성하려는 sink element의 데이터 전송 시점을
일치시키기 위한 부분에 집중하고 있습니다. 하드웨어 sink element 를 사용하는
경우의 이벤트는 하드웨어의 latency를 고려하여 구성되어야 합니다. 하나의
stream에 대한 이벤트와 데이터 도달은 항상 일정함을 보장하지만, 복수의
element에 대해서도 그 시점을 보장하기 위한 기능이 보강되어있습니다.

